<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>guide on Rony's Wiki</title><link>https://rony.ronaksoft.com/tags/guide/</link><description>Recent content in guide on Rony's Wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 26 Jul 2021 14:33:20 +0430</lastBuildDate><atom:link href="https://rony.ronaksoft.com/tags/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://rony.ronaksoft.com/getting-started/</link><pubDate>Mon, 26 Jul 2021 14:33:20 +0430</pubDate><guid>https://rony.ronaksoft.com/getting-started/</guid><description>Prepare To install Rony we need to have protoc compiler installed in our system. With a quick search we can find good resources. Some useful references provided here:
https://grpc.io/docs/protoc-installation/ http://google.github.io/proto-lens/installing-protoc.html We also need to install protoc golang plugin from here
Install Rony To install Rony just run: GO111MODULE=on go get -u github.com/ronaksoft/rony/... or in Go 1.16 and above use: go install github.com/ronaksoft/rony/...
Rony has its own protoc plugin which is required to generate codes based on your proto files.</description></item><item><title>Architect</title><link>https://rony.ronaksoft.com/architect/</link><pubDate>Mon, 26 Jul 2021 14:33:20 +0430</pubDate><guid>https://rony.ronaksoft.com/architect/</guid><description>Big Picture Rony provides facilities to implement clustered services quickly. When you write your service using Rony framework, you write the minimum amount of boiler-place code. Most of the code generated by Rony.
Components Edge The outermost layer of Rony is edge.Server. This is the only object which you need to access all the capabilities of Rony. Edge servers are identifies by their unique id (i.e., replica set) in a cluster.</description></item></channel></rss>