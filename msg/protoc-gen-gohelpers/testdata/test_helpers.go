// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: test.proto

package packageName

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_Message1 int64 = 3131464828

type poolMessage1 struct {
	pool sync.Pool
}

func (p poolMessage1) Get() *Message1 {
	x, ok := p.pool.Get().(*Message1)
	if !ok {
		return &Message1{}
	}
	return x
}

func (p poolMessage1) Put(x *Message1) {
	p.pool.Put(x)
}

var PoolMessage1 = poolMessage1{}

func ResultMessage1(out *MessageEnvelope, res *Message1) {
	out.Constructor = C_Message1
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_Message2 int64 = 598674886

type poolMessage2 struct {
	pool sync.Pool
}

func (p poolMessage2) Get() *Message2 {
	x, ok := p.pool.Get().(*Message2)
	if !ok {
		return &Message2{}
	}
	x.Param1 = 0
	return x
}

func (p poolMessage2) Put(x *Message2) {
	p.pool.Put(x)
}

var PoolMessage2 = poolMessage2{}

func ResultMessage2(out *MessageEnvelope, res *Message2) {
	out.Constructor = C_Message2
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[3131464828] = "Message1"
	ConstructorNames[598674886] = "Message2"
}
