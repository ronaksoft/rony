// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_ProtoMessage int64 = 2179260159

type poolProtoMessage struct {
	pool sync.Pool
}

func (p *poolProtoMessage) Get() *ProtoMessage {
	x, ok := p.pool.Get().(*ProtoMessage)
	if !ok {
		return &ProtoMessage{}
	}
	x.AuthID = 0
	x.MessageKey = nil
	return x
}

func (p *poolProtoMessage) Put(x *ProtoMessage) {
	p.pool.Put(x)
}

var PoolProtoMessage = poolProtoMessage{}

func ResultProtoMessage(out *MessageEnvelope, res *ProtoMessage) {
	out.Constructor = C_ProtoMessage
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessageEnvelope int64 = 535232465

type poolMessageEnvelope struct {
	pool sync.Pool
}

func (p *poolMessageEnvelope) Get() *MessageEnvelope {
	x, ok := p.pool.Get().(*MessageEnvelope)
	if !ok {
		return &MessageEnvelope{}
	}
	return x
}

func (p *poolMessageEnvelope) Put(x *MessageEnvelope) {
	p.pool.Put(x)
}

var PoolMessageEnvelope = poolMessageEnvelope{}

func ResultMessageEnvelope(out *MessageEnvelope, res *MessageEnvelope) {
	out.Constructor = C_MessageEnvelope
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_ProtoEncryptedPayload int64 = 2668405547

type poolProtoEncryptedPayload struct {
	pool sync.Pool
}

func (p *poolProtoEncryptedPayload) Get() *ProtoEncryptedPayload {
	x, ok := p.pool.Get().(*ProtoEncryptedPayload)
	if !ok {
		return &ProtoEncryptedPayload{}
	}
	return x
}

func (p *poolProtoEncryptedPayload) Put(x *ProtoEncryptedPayload) {
	p.pool.Put(x)
}

var PoolProtoEncryptedPayload = poolProtoEncryptedPayload{}

func ResultProtoEncryptedPayload(out *MessageEnvelope, res *ProtoEncryptedPayload) {
	out.Constructor = C_ProtoEncryptedPayload
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_MessageContainer int64 = 1972016308

type poolMessageContainer struct {
	pool sync.Pool
}

func (p *poolMessageContainer) Get() *MessageContainer {
	x, ok := p.pool.Get().(*MessageContainer)
	if !ok {
		return &MessageContainer{}
	}
	x.Envelopes = x.Envelopes[:0]
	return x
}

func (p *poolMessageContainer) Put(x *MessageContainer) {
	p.pool.Put(x)
}

var PoolMessageContainer = poolMessageContainer{}

func ResultMessageContainer(out *MessageEnvelope, res *MessageContainer) {
	out.Constructor = C_MessageContainer
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_Error int64 = 2619118453

type poolError struct {
	pool sync.Pool
}

func (p *poolError) Get() *Error {
	x, ok := p.pool.Get().(*Error)
	if !ok {
		return &Error{}
	}
	return x
}

func (p *poolError) Put(x *Error) {
	p.pool.Put(x)
}

var PoolError = poolError{}

func ResultError(out *MessageEnvelope, res *Error) {
	out.Constructor = C_Error
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[2179260159] = "ProtoMessage"
	ConstructorNames[535232465] = "MessageEnvelope"
	ConstructorNames[2668405547] = "ProtoEncryptedPayload"
	ConstructorNames[1972016308] = "MessageContainer"
	ConstructorNames[2619118453] = "Error"
}
