package main

import (
	"fmt"
	"github.com/ronaksoft/rony"
	c "<%= packagePath() %>/conf"
	"github.com/ronaksoft/rony/edgec"
	"github.com/ronaksoft/rony/registry"
	"github.com/spf13/cobra"
)

var ClientCmd = &cobra.Command{
	Use: "client",
	RunE: func(cmd *cobra.Command, args []string) error {
		err := c.Conf().BindCmdFlags(cmd)
		if err != nil {
			return err
		}

		// Sample code for creating a client
		// Instantiate a websocket connection, to use http connection we could use edgec.NewHttp
		wsc := edgec.NewWebsocket(
		    edgec.WebsocketConfig{
                SeedHostPort: fmt.Sprintf("%s:%d", c.GetHost(), c.GetPort()),
                Handler: func(m *rony.MessageEnvelope) {
                    fmt.Println(m.RequestID, registry.ConstructorName(m.Constructor))
                },
		    },
		)

		// Start the websocket connection manager
		err = wsc.Start()
		if err != nil {
			return err
		}

		// Instantiate the client stub code and set its underlying client connection
		// c := service.NewSampleServiceClient(wsc)

		return nil
	},
}
