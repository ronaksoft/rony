syntax = "proto2";
package rony;

// MessageEnvelope
// This type of message will be used to contain another ProtoBuffer Message inside
message MessageEnvelope {
    required int64 Constructor = 1;
    required fixed64 RequestID = 2;
    optional bytes Message = 4;
}


// MessageContainer
// This type of message will be used to send multi messages inside a single container message
message MessageContainer {
    required int32 Length = 1;
    repeated MessageEnvelope Envelopes = 2;
}

// Error
message Error {
    required string Code = 1;
    required string Items = 2;
    optional string EnglishTemplate = 3;
    repeated string EnglishItems = 4;
    optional string LocalTemplate = 5;
    repeated string LocalItems = 6;
}

// Redirect
message Redirect {
    repeated string LeaderHostPort = 1;
}

// ClusterMessage
message ClusterMessage {
    required bytes Sender = 1;
    required int64 AuthID = 2;
    required MessageEnvelope Envelope = 3;
}

// RaftCommand
message RaftCommand {
    required bytes Sender = 1;
    required int64 AuthID = 2;
    required MessageEnvelope Envelope = 3;
}

enum RaftState {
    None = 0;
    Follower = 1;
    Candidate = 2;
    Leader = 3;
    Shutdown = 4;
}

// EdgeNode
message EdgeNode {
    required bytes ServerID = 1;
    optional uint64 ReplicaSet = 2;
    optional uint64 ShardSet = 3;
    optional uint32 RaftPort = 4;
    optional RaftState RaftState = 5;
    repeated string GatewayAddr = 6;

}
