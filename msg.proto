syntax = "proto2";
package rony;


// MessageEnvelope
// This type of message will be used to contain another ProtoBuffer Message inside
message MessageEnvelope {
    required int64 Constructor = 1;
    required fixed64 RequestID = 2;
    required bytes Message = 4;
}

// UpdateEnvelope
message UpdateEnvelope {
    required int64 Constructor = 1;
    required bytes Update = 2;
    required int32 UCount = 3;
    required int64 UpdateID = 4;
    required int64 Timestamp = 5;
}


// MessageContainer
// This type of message will be used to send multi messages inside a single container message
message MessageContainer {
    required int32 Length = 1;
    repeated MessageEnvelope Envelopes = 2;
}

// Error
message Error {
    required string Code = 1;
    required string Items = 2;
}

// RaftCommand
message RaftCommand {
    required uint64 ConnID = 1;
    required int64 AuthID = 2;
    required MessageEnvelope Envelope = 3;
}

enum RaftState {
    None = 0;
    Follower = 1;
    Candidate = 2;
    Leader = 3;
    Shutdown = 4;
}

// EdgeNode
message EdgeNode {
    required string ServerID = 1;
    optional uint32 ReplicaSet = 2;
    optional uint32 ShardSet = 3;
    optional uint32 RaftPort = 4;
    optional uint32 ShardMin = 5;
    optional uint32 ShardMax = 6;
    required string GatewayAddr = 7;
    optional RaftState RaftState = 8;
}
